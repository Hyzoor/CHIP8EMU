#include "../include/Memory.h"
#include <fstream>

Memory::Memory() {}
Memory::~Memory() {}

void Memory::initSprites(){
    for (int i = 0; i < 80; i++)
    {
        const uint8_t sprites[] = {
            0xf0, 0x90, 0x90, 0x90, 0xf0, 0x20, 0x60, 0x20, 0x20, 0x70, 0xf0, 0x10, 0xf0, 0x80, 0xf0, 0xf0, 0x10, 0xf0,
            0x10, 0xf0, 0x90, 0x90, 0xf0, 0x10, 0x10, 0xf0, 0x80, 0xf0, 0x10, 0xf0, 0xf0, 0x80, 0xf0, 0x90, 0xf0, 0xf0,
            0x10, 0x20, 0x40, 0x40, 0xf0, 0x90, 0xf0, 0x90, 0xf0, 0xf0, 0x90, 0xf0, 0x10, 0xf0, 0xf0, 0x90, 0xf0, 0x90,
            0xf0, 0xe0, 0x90, 0xe0, 0x90, 0xe0, 0xf0, 0x80, 0x80, 0x80, 0xf0, 0xe0, 0x90, 0x90, 0x90, 0xe0, 0xf0, 0x80,
            0xf0, 0x80, 0xf0, 0xf0, 0x80, 0xf0, 0x80, 0x80};
        memoryArray[i] = sprites[i];
    }
}

void Memory::loadROM(const std::string &ROMPath){

    std::ifstream inputFile(ROMPath, std::ios::binary);

    if (!inputFile.is_open())
    {
        throw std::runtime_error("No se pudo abrir el archivo ROM");
    }

    char byteRead;

    for (int i = 0x200; inputFile.get(byteRead); i++)
    {
        memoryArray[i] = static_cast<uint8_t>(byteRead);
    }
}

void Memory::write(uint16_t address, uint8_t writeData){
    memoryArray[address] = writeData;
}

uint8_t Memory::read(uint16_t address){
    return memoryArray[address];
}
